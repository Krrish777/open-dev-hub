2:I[5250,["250","static/chunks/250-27d9df3c9d800d4f.js","841","static/chunks/841-443d37396908e6ae.js","915","static/chunks/app/blog/recoil-a-new-approach-to-manage-state/page-d1be0237877b20de.js"],""]
3:I[3657,["250","static/chunks/250-27d9df3c9d800d4f.js","841","static/chunks/841-443d37396908e6ae.js","915","static/chunks/app/blog/recoil-a-new-approach-to-manage-state/page-d1be0237877b20de.js"],""]
4:I[5613,[],""]
5:I[1778,[],""]
6:I[5935,["250","static/chunks/250-27d9df3c9d800d4f.js","267","static/chunks/267-948585473cbf7fdd.js","288","static/chunks/288-e1d36dc251141c78.js","185","static/chunks/app/layout-855cc43b3c03ccd9.js"],""]
7:I[258,["250","static/chunks/250-27d9df3c9d800d4f.js","267","static/chunks/267-948585473cbf7fdd.js","288","static/chunks/288-e1d36dc251141c78.js","185","static/chunks/app/layout-855cc43b3c03ccd9.js"],""]
a:I[207,["250","static/chunks/250-27d9df3c9d800d4f.js","267","static/chunks/267-948585473cbf7fdd.js","288","static/chunks/288-e1d36dc251141c78.js","185","static/chunks/app/layout-855cc43b3c03ccd9.js"],""]
b:I[4621,["250","static/chunks/250-27d9df3c9d800d4f.js","267","static/chunks/267-948585473cbf7fdd.js","288","static/chunks/288-e1d36dc251141c78.js","185","static/chunks/app/layout-855cc43b3c03ccd9.js"],"Toaster"]
c:I[4274,["250","static/chunks/250-27d9df3c9d800d4f.js","267","static/chunks/267-948585473cbf7fdd.js","288","static/chunks/288-e1d36dc251141c78.js","185","static/chunks/app/layout-855cc43b3c03ccd9.js"],"Analytics"]
d:I[1255,["250","static/chunks/250-27d9df3c9d800d4f.js","267","static/chunks/267-948585473cbf7fdd.js","288","static/chunks/288-e1d36dc251141c78.js","185","static/chunks/app/layout-855cc43b3c03ccd9.js"],"SpeedInsights"]
8:T518,M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z0:["Gj59k_f9IQ8W6W5lANYFE",[[["",{"children":["blog",{"children":["recoil-a-new-approach-to-manage-state",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":["recoil-a-new-approach-to-manage-state",{"children":["__PAGE__",{},["$L1",[["$","p",null,{"className":"text-base my-4 text-gray-400","children":["$","$L2",null,{"className":"underline my-4","href":"/blog","children":"Back"}]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":["$","div",null,{"className":"border border-border p-2 bg-secondary rounded-xl my-4","children":["$","$L3",null,{"src":"https://cdn.hashnode.com/res/hashnode/image/upload/v1713598112335/22f5d8ec-78de-47f1-88f9-2cfaff4fe2af.jpeg?w=1600&h=840&fit=crop&crop=entropy&auto=compress,format&format=webp","alt":"Banner","width":"$undefined","height":"$undefined","className":"rounded-xl"}]}]}],"\n",["$","h1",null,{"className":"md:text-4xl text-3xl font-bold my-8 text-gray-200 text-center","children":"Recoil: A New Approach to State Management in React"}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Hey fellow developers! As a React enthusiast, I'm excited to share my experience with Recoil, a state management library that's taken my React game to the next level. In this blog, I'll introduce you to Recoil, explain its core functionality, and highlight its advantages over traditional React hooks for state management."}],"\n",["$","h2",null,{"className":"md:text-3xl text-2xl font-bold my-5 text-gray-200","children":"What is Recoil?"}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Recoil is a state management library for React that provides several hooks to manage global state in your application. It's a simple and flexible library that allows you to define atoms (state units) and selectors (derived state) to manage your application's state. Recoil is designed to be efficient, scalable, and easy to use, making it a great choice for managing complex state in your React applications."}],"\n",["$","h2",null,{"className":"md:text-3xl text-2xl font-bold my-5 text-gray-200","children":"Why use Recoil?"}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"So, why should you consider using Recoil over traditional React hooks? Here are a few reasons:"}],"\n",["$","ul",null,{"className":"list-disc pl-5 my-4 text-gray-400","children":["\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Simplifies state management: Recoil makes it easy to manage global state by providing a centralized store for your application's state."}],"\n"]}],"\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Efficient data sharing: Recoil allows you to share data between components without having to pass props down manually."}],"\n"]}],"\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Easy debugging: Recoil provides a clear and visual representation of your application's state, making it easier to debug and understand."}],"\n"]}],"\n"]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":["$","div",null,{"className":"border border-border p-2 bg-secondary rounded-xl my-4","children":["$","$L3",null,{"src":"https://miro.medium.com/v2/resize:fit:1400/0*k18qFfsSO5qk27Vc.png","alt":"Banner","width":"$undefined","height":"$undefined","className":"rounded-xl"}]}]}],"\n",["$","h2",null,{"className":"md:text-3xl text-2xl font-bold my-5 text-gray-200","children":"Core Functionality"}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Recoil's core functionality revolves around the concept of atoms and selectors."}],"\n",["$","ul",null,{"className":"list-disc pl-5 my-4 text-gray-400","children":["\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Atoms: Atoms are the basic units of state in Recoil. They're immutable and can be used to store any type of data."}],"\n"]}],"\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Selectors: Selectors are pure functions that compute derived state from atoms. They're used to transform and combine data from multiple atoms."}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"className":"md:text-3xl text-2xl font-bold my-5 text-gray-200","children":"A Closer Look at Its Basic Hooks"}],"\n",["$","ol",null,{"className":"list-decimal pl-5 my-4 text-gray-400","children":["\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","h5",null,{"className":"md:text-lg text-lg  font-bold my-2 text-gray-200","children":"useRecoilState"}],"\n"]}],"\n"]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"This hook is a cornerstone of Recoil and works similarly to React's useState. It allows you to both read and write to an atom. Here's a simple example:"}],"\n",["$","div",null,{"className":"p-4 my-4 rounded-xl text-gray-400 border border-border bg-secondary  overflow-x-auto","children":["$","pre",null,{"className":"rounded-xl","children":["$","code",null,{"className":"text-sm p-1 rounded-lg ","children":"import { atom, useRecoilState } from 'recoil';\r\n\r\n// Define an atom\r\n\r\nconst textState = atom({\r\n   key: 'textState', // unique ID (with respect to other atoms/selectors)\r\n   default: '', // default value (aka initial value)\r\n});\r\n\r\nfunction TextInput() {\r\n          \r\n  const[text, setText] = useRecoilState(textState);\r\n\r\n  const onChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n return (\r\n    <input type=\"text\" value={text} onChange={onChange} />\r\n  );\r\n}\n"}]}]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"In this example, textState is an atom that holds a string. The TextInput component uses useRecoilState to get the current value of textState and a function to update it. Any component that uses this same atom will automatically receive the updated value, facilitating shared state management."}],"\n",["$","ol",null,{"className":"list-decimal pl-5 my-4 text-gray-400","children":["\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","h5",null,{"className":"md:text-lg text-lg  font-bold my-2 text-gray-200","children":"useRecoilValue"}],"\n"]}],"\n"]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Sometimes, you only need to read the value of an atom or selector without updating it. For this purpose, Recoil provides the useRecoilValue hook. It's a read-only hook, making it perfect for components that only need to display state without modifying it."}],"\n",["$","div",null,{"className":"p-4 my-4 rounded-xl text-gray-400 border border-border bg-secondary  overflow-x-auto","children":["$","pre",null,{"className":"rounded-xl","children":["$","code",null,{"className":"text-sm p-1 rounded-lg ","children":"import { useRecoilValue } from 'recoil';\r\nfunction text Display() {\r\n  const text = useRecoilValue(textState);\r\n  return <h1>{text}</h1>;\r\n}\n"}]}]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Here, TextDisplay simply displays the value of textState. Since it only needs to read the atom, useRecoilValue is used instead of useRecoilState ."}],"\n",["$","ol",null,{"className":"list-decimal pl-5 my-4 text-gray-400","children":["\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","h5",null,{"className":"md:text-lg text-lg  font-bold my-2 text-gray-200","children":"useRecoilState"}],"\n"]}],"\n"]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"If a component needs to update the state but does not need to read it, useSetRecoilState is the optimal choice. This hook returns a setter function only, which can be used to update the state."}],"\n",["$","div",null,{"className":"p-4 my-4 rounded-xl text-gray-400 border border-border bg-secondary  overflow-x-auto","children":["$","pre",null,{"className":"rounded-xl","children":["$","code",null,{"className":"text-sm p-1 rounded-lg ","children":"import { useSetRecoilState } from 'recoil';\r\n\r\nfunction ResetButton() {\r\n  const setText = useSetRecoilState(textState);\r\n\r\n  const reset = () => {\r\n    setText('');\r\n  };\r\n\r\n  return <button onClick={reset}>Reset</button>;\r\n}\n"}]}]}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"In the TextUpdater component, the button click updates textState to a predefined string. This hook prevents the component from re-rendering when the atom changes, which can be beneficial for performance."}],"\n",["$","h2",null,{"className":"md:text-3xl text-2xl font-bold my-5 text-gray-200","children":"Advantages over traditional React hooks"}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Recoil offers several advantages over traditional React hooks for state management:"}],"\n",["$","ul",null,{"className":"list-disc pl-5 my-4 text-gray-400","children":["\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Decouples components: Recoil allows you to decouple components from each other, making it easier to manage complex state relationships."}],"\n"]}],"\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Improves performance: Recoil's optimized caching and lazy evaluation ensure that your application's state is updated efficiently."}],"\n"]}],"\n",["$","li",null,{"className":"ml-2 text-gray-400","children":["\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Simplifies debugging: Recoil's visual representation of your application's state makes it easier to understand and debug."}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"className":"md:text-3xl text-2xl font-bold my-5 text-gray-200","children":"Conclusion"}],"\n",["$","p",null,{"className":"text-base my-4 text-gray-400","children":"Recoil is a powerful state management library that simplifies global state management in React. Its core functionality, based on atoms and selectors, makes it easy to share data between components and debug your application's state. By using Recoil, you can write more efficient, scalable, and maintainable code. Give Recoil a try and take your React development to the next level!"}]],null]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","recoil-a-new-approach-to-manage-state","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cecdbce2880c059c.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","main",null,{"className":"max-w-5xl mx-auto p-4 animate_in","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}],null]]},[null,["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","$L6",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=G-4ZJDKZYQ78"}],["$","$L6",null,{"id":"google-analytics","children":"window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n  \n    gtag('config', 'G-4ZJDKZYQ78');"}]]}],["$","body",null,{"className":"__className_b1da2a","children":[["$","$L7",null,{"children":[["$","div",null,{"className":"background"}],["$","nav",null,{"className":"py-4 backdrop-blur-md sticky top-0 left-0 right-0 z-50","children":["$","div",null,{"className":" flex justify-between items-center max-w-5xl m-auto px-4","children":[["$","h1",null,{"className":"text-xl  font-bold relative  bg-clip-text text-transparent bg-gradient-to-b from-neutral-200 to-neutral-500","children":["$","$L2",null,{"href":"/","children":"OpenDevHub"}]}],["$","div",null,{"className":"flex items-center gap-4","children":[["$","$L2",null,{"href":"https://twitter.com/nikhil_nigamnik","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":" w-8 h-8 p-1 text-gray-400 undefined","children":["$undefined",[["$","path","0",{"d":"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}],["$","$L2",null,{"href":"https://github.com/nikhilnigamnik/open-dev-hub","children":["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 496 512","className":"rounded-full w-8 h-8 p-1 text-gray-400 undefined","children":["$undefined",[["$","path","0",{"d":"$8","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}]}]]}]]}]}],["$","main",null,{"className":"mb-20","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$L9","loadingStyles":[],"loadingScripts":[],"hasLoading":true,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","section",null,{"children":["$","div",null,{"className":"py-8 px-4 mx-auto max-w-screen-xl h-[60vh] lg:py-16 lg:px-6","children":["$","div",null,{"className":"mx-auto max-w-screen-sm text-center","children":[["$","h1",null,{"className":"mb-4 text-7xl tracking-tight font-extrabold lg:text-9xl text-gradient","children":"404"}],["$","p",null,{"className":"mb-4 text-3xl tracking-tight font-bold text-gray-400 md:text-4xl ","children":"Something's missing."}],["$","p",null,{"className":"mb-4 text-sm font-light text-gray-500 dark:text-gray-400","children":["Sorry, we can't find that page. You'll find lots to explore on the home page."," "]}],["$","button",null,{"type":"$undefined","className":"relative inline-flex h-fit w-fit rounded-full border border-blue-100/20 bg-blue-200/10 text-slate-200 outline-none ring-yellow-300/40 transition-colors after:absolute after:inset-0 after:-z-10 after:animate-pulse after:rounded-full after:bg-yellow-100 after:bg-opacity-0 after:blur-md after:transition-all after:duration-500 hover:border-yellow-200/40 hover:text-yellow-300 after:hover:bg-opacity-15 focus:ring-2 px-8 py-1","children":["$","$L2",null,{"href":"/","children":"Back to Homepage"}]}]]}]}]}],"notFoundStyles":[],"styles":null}]}],["$","$La",null,{}]]}],["$","$Lb",null,{}],["$","$Lc",null,{}],["$","$Ld",null,{}]]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/86359a79fcfbd0d1.css","precedence":"next","crossOrigin":""}]],"$Le"]]]]
9:["$","section",null,{"className":"max-w-5xl mx-auto p-4 flex flex-col gap-4","children":[["$","div",null,{"className":"animate-pulse bg-secondary w-full h-40 rounded-xl"}],[["$","div",null,{"className":"animate-pulse bg-secondary w-full h-10 rounded-xl"}],["$","div",null,{"className":"animate-pulse bg-secondary w-full h-10 rounded-xl"}],["$","div",null,{"className":"animate-pulse bg-secondary w-full h-10 rounded-xl"}],["$","div",null,{"className":"animate-pulse bg-secondary w-full h-10 rounded-xl"}],["$","div",null,{"className":"animate-pulse bg-secondary w-full h-10 rounded-xl"}]]]}]
e:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"OpenDevHub"}],["$","meta","3",{"name":"description","content":"OpenDevHub is a platform for open source projects."}],["$","link","4",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
1:null
