// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  title     String?
  email     String
  image     String
  skills    String[]
  twitter   String?
  github    String?
  linkedin  String?
  portfolio String?
  project   projects[]
  skill     skill[]
  Project   Project[]
}

model skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userId    String   @db.ObjectId
  user      users    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model projects {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  status      Boolean
  repoLink    String
  projectLink String
  tags        String[]
  userId      String   @db.ObjectId
  user        users    @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model organizationsProjects {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  status      Boolean
  repoLink    String
  projectLink String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model admin {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String
}

model newsletter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  slug        String?  @unique
  verified    Boolean? @default(false)
  logo        String?
  description String?
  language    String?
  topics      String[]
  stars       Int?
  link        String?
  userId      String?  @db.ObjectId
  user        users?   @relation(fields: [userId], references: [id])
  repo        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
